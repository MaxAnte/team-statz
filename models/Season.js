const { Schema, model, Types } = require("mongoose");

const schema = new Schema({
  name: { type: String, required: true },
  dates: [
    {
      _id: { type: Types.ObjectId, ref: "Date" },
      enemy: { type: String, required: true },
      ourScore: { type: Number },
      enemyScore: { type: Number },
      date: { type: String, required: true },
      time: { type: String, required: true },
    },
  ],
  players: [
    {
      _id: { type: Types.ObjectId, ref: "Player" },
      name: { type: String, required: true },
      position: { type: String },
      image_thumb: { type: String },
      age: { type: Number },
      birthDate: { type: String },
      number: { type: Number },
      gp: { type: Number, default: 0 },
      gs: { type: Number, default: 0 },
      mp: { type: Number, default: 0 },
      pts: { type: Number, default: 0 },
      oreb: { type: Number, default: 0 },
      dreb: { type: Number, default: 0 },
      reb: { type: Number, default: 0 },
      ast: { type: Number, default: 0 },
      blk: { type: Number, default: 0 },
      stl: { type: Number, default: 0 },
      plus_minus: { type: Number, default: 0 },
      fta: { type: Number, default: 0 },
      ftm: { type: Number, default: 0 },
      two_pa: { type: Number, default: 0 },
      two_pm: { type: Number, default: 0 },
      three_pa: { type: Number, default: 0 },
      three_pm: { type: Number, default: 0 },
      tov: { type: Number, default: 0 },
      fouls: { type: Number, default: 0 },
      bestInPts: { type: Boolean, default: false },
      bestInReb: { type: Boolean, default: false },
      bestInAst: { type: Boolean, default: false },
      bestInBlk: { type: Boolean, default: false },
      bestInStl: { type: Boolean, default: false },
    },
  ],
  teams: [
    {
      _id: { type: Types.ObjectId, ref: "Team" },
      name: { type: String, required: true, unique: true },
      wins: { type: Number, required: true, default: 0 },
      loses: { type: Number, required: true, default: 0 },
      group: { type: String, default: "A" },
      points: { type: Number, required: true, default: 0 },
      winRate: { type: Number, required: true, default: 0 },
    },
  ],
  games: [
    {
      _id: { type: Types.ObjectId, ref: "Game" },
      enemy: { type: String, required: true },
      ourScore: { type: Number, default: 0, required: true },
      enemyScore: { type: Number, default: 0, required: true },
      quarters: [{ our: Number, enemy: Number }],
      date: { type: String, required: true },
      time: { type: String, required: true },
      pending: { type: Boolean, required: true, default: true },
      playersStats: [
        {
          pID: { type: Types.ObjectId, ref: "Player" },
          gs: { type: Boolean, default: false },
          pts: { type: Number, default: 0 },
          oreb: { type: Number, default: 0 },
          dreb: { type: Number, default: 0 },
          ast: { type: Number, default: 0 },
          blk: { type: Number, default: 0 },
          stl: { type: Number, default: 0 },
          plus_minus: { type: Number, default: 0 },
          two_pa: { type: Number, default: 0 },
          two_pm: { type: Number, default: 0 },
          three_pa: { type: Number, default: 0 },
          three_pm: { type: Number, default: 0 },
          fta: { type: Number, default: 0 },
          ftm: { type: Number, default: 0 },
          tov: { type: Number, default: 0 },
          fouls: { type: Number, default: 0 },
          minutes: [{ type: String, default: "" }],
          coordinates: [{ x: Number, y: Number, miss: Boolean }],
        },
      ],
    },
  ],
  playoffsMatchups: [
    {
      _id: { type: Types.ObjectId, ref: "PlayoffsMatchup" },
      team1: { type: String, required: true, default: "" },
      team2: { type: String, required: true, default: "" },
      winner: { type: String, default: "" },
    },
  ],
});

module.exports = model("Season", schema);
